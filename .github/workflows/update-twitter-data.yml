name: Update Twitter Data

on:
  schedule:
<<<<<<< HEAD
    # 毎時0分に実行 (UTC)
    - cron: '0 * * * *'
=======
      - cron: '0 */6 * * *'
>>>>>>> a0a1185c464db2df050306337210bb05c6e31436
  workflow_dispatch: # 手動実行も可能

jobs:
  update-twitter-data:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install dependencies
      run: |
        npm init -y
        npm install axios dotenv
        
<<<<<<< HEAD
    - name: Debug file system
      run: |
        echo "Current directory:"
        pwd
        echo "Directory contents:"
        ls -la
        echo "Scripts directory:"
        ls -la scripts/ || echo "scripts directory not found"
        echo "All .js files:"
        find . -name "*.js" -type f || echo "No .js files found"
        
=======
>>>>>>> a0a1185c464db2df050306337210bb05c6e31436
    - name: Fetch Twitter data
      env:
        TWITTER_BEARER_TOKEN: ${{ secrets.TWITTER_BEARER_TOKEN }}
        TWITTER_USER_ID: ${{ secrets.TWITTER_USER_ID }}
<<<<<<< HEAD
      run: |
        if [ -f "scripts/fetch-twitter-data.js" ]; then
          echo "Running Twitter data fetch script..."
          node scripts/fetch-twitter-data.js
        else
          echo "Error: scripts/fetch-twitter-data.js not found"
          echo "Creating scripts directory and file..."
          mkdir -p scripts
          cat > scripts/fetch-twitter-data.js << 'EOF'
        const axios = require('axios');
        const fs = require('fs');
        const path = require('path');
        
        // 環境変数から認証情報を取得
        const BEARER_TOKEN = process.env.TWITTER_BEARER_TOKEN;
        const USER_ID = process.env.TWITTER_USER_ID;
        
        if (!BEARER_TOKEN || !USER_ID) {
            console.error('環境変数が設定されていません');
            console.error('BEARER_TOKEN:', BEARER_TOKEN ? 'Set' : 'Not set');
            console.error('USER_ID:', USER_ID ? 'Set' : 'Not set');
            process.exit(1);
        }
        
        const headers = {
            'Authorization': `Bearer ${BEARER_TOKEN}`,
            'Content-Type': 'application/json',
        };
        
        async function fetchUserInfo() {
            try {
                console.log('Fetching user info...');
                const response = await axios.get(
                    `https://api.twitter.com/2/users/${USER_ID}?user.fields=public_metrics`,
                    { headers }
                );
                
                const user = response.data.data;
                console.log('User info fetched successfully');
                return {
                    name: user.name,
                    username: user.username,
                    followers_count: user.public_metrics.followers_count,
                    following_count: user.public_metrics.following_count,
                    tweet_count: user.public_metrics.tweet_count
                };
            } catch (error) {
                console.error('ユーザー情報取得エラー:', error.response?.data || error.message);
                throw error;
            }
        }
        
        async function fetchRecentTweets() {
            try {
                console.log('Fetching recent tweets...');
                const response = await axios.get(
                    `https://api.twitter.com/2/users/${USER_ID}/tweets?max_results=10&tweet.fields=created_at,public_metrics&exclude=retweets,replies`,
                    { headers }
                );
                
                const tweets = response.data.data || [];
                console.log(`Fetched ${tweets.length} tweets`);
                return tweets.map(tweet => ({
                    text: tweet.text,
                    created_at: tweet.created_at,
                    reply_count: tweet.public_metrics.reply_count,
                    retweet_count: tweet.public_metrics.retweet_count,
                    like_count: tweet.public_metrics.like_count,
                    quote_count: tweet.public_metrics.quote_count
                }));
            } catch (error) {
                console.error('ツイート取得エラー:', error.response?.data || error.message);
                throw error;
            }
        }
        
        async function main() {
            try {
                console.log('Twitter データを取得中...');
                
                const [userInfo, tweets] = await Promise.all([
                    fetchUserInfo(),
                    fetchRecentTweets()
                ]);
                
                const data = {
                    lastUpdated: new Date().toISOString(),
                    user: userInfo,
                    tweets: tweets
                };
                
                // ディレクトリが存在しない場合は作成
                const outputDir = path.dirname('site_data/json/twitter_data.json');
                if (!fs.existsSync(outputDir)) {
                    fs.mkdirSync(outputDir, { recursive: true });
                }
                
                // JSONファイルに保存
                fs.writeFileSync(
                    'site_data/json/twitter_data.json',
                    JSON.stringify(data, null, 2),
                    'utf8'
                );
                
                console.log('Twitter データの更新が完了しました');
                console.log(`フォロワー数: ${userInfo.followers_count}`);
                console.log(`ツイート数: ${tweets.length}件取得`);
                
            } catch (error) {
                console.error('メインプロセスエラー:', error);
                process.exit(1);
            }
        }
        
        main();
        EOF
          echo "Script created, now running..."
          node scripts/fetch-twitter-data.js
        fi
=======
      run: node scripts/fetch-twitter-data.js
>>>>>>> a0a1185c464db2df050306337210bb05c6e31436
      
    - name: Commit and push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add site_data/json/twitter_data.json
        git diff --staged --quiet || git commit -m "Update Twitter data $(date)"
        git push